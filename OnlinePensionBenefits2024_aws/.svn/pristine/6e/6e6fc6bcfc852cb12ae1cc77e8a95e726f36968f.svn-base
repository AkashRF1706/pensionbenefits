package actions;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import database.DatabaseConnection;

@WebServlet("/UpdatePensionServlet")
public class UpdatePensionServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    	
    	HttpSession session = request.getSession();
    	
    	String email = session.getAttribute("email").toString();

        String personalContributionStr = request.getParameter("personalContribution");
        double personalContribution = 0.0;

        if (personalContributionStr != null && !personalContributionStr.isEmpty()) {
            personalContribution = Double.parseDouble(personalContributionStr);
        }

        Connection conn = null;
        PreparedStatement pstmt = null;

        try {
            // Establish database connection
            conn = DatabaseConnection.getConnection();

            String selectQuery = "SELECT update_flag FROM pensions WHERE update_flag = 'C' AND employee_id = (SELECT id FROM employees WHERE email = ?)";
            PreparedStatement ptst = conn.prepareStatement(selectQuery);
            ptst.setString(1, email);
            ResultSet rs = ptst.executeQuery();
            if(rs.next()) {
            	response.sendRedirect("managePension.jsp?RequestPending");
            	return;
            }
            
            // Prepare SQL query to update personal pension based on employee email
            String sql = "UPDATE pensions SET update_pension_amount = ?, update_flag = ? WHERE employee_id = (SELECT id FROM employees WHERE email = ?)";

            pstmt = conn.prepareStatement(sql);
            pstmt.setDouble(1, personalContribution);
            pstmt.setString(2, "C");
            pstmt.setString(3, email);

            // Execute the update
            int rowsUpdated = pstmt.executeUpdate();

            if (rowsUpdated > 0) {
                // Insert the operation into pension_operations table
                String insertOperation = "INSERT INTO pension_operations (employee_id, operation_type, amount, status) "
                                       + "VALUES ((SELECT id FROM employees WHERE email = ?), 'Update', ?, 'Company Pending')";
                PreparedStatement pstInsertOperation = conn.prepareStatement(insertOperation);
                pstInsertOperation.setString(1, email);
                pstInsertOperation.setDouble(2, personalContribution);
                pstInsertOperation.executeUpdate();
                pstInsertOperation.close();

                // Update successful, redirect to a success page or display success message
                response.sendRedirect("myRequests.jsp?success");
            } else {
                // Update failed, redirect to an error page or display error message
                response.sendRedirect("myRequests.jsp?failed");
            }

        } catch (Exception e) {
            e.printStackTrace();
            // Handle the exception and possibly log it
            response.sendRedirect("myRequests.jsp?failed");
        } finally {
            // Close resources
            try {
                if (pstmt != null) pstmt.close();
                if (conn != null) conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Handle GET requests if necessary, otherwise forward to POST
        doPost(request, response);
    }
}
